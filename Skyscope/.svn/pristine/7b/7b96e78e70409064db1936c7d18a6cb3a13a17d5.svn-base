<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.syntun.dao.PromotionListDao" >
  <resultMap id="BaseResultMap" type="PromotionList" >
    <id property="id" column="id" jdbcType="INTEGER" />
    <result property="promotionId" column="promotion_id" jdbcType="INTEGER"/>
    <result property="promotionColName" column="promotion_col_name" jdbcType="VARCHAR" />
  </resultMap>

  <select id="selectRecord" resultType="PromotionList">
    select * FROM promotion_All_id_col
  </select>
  
  <select id="getCount" parameterType="java.util.Map"  resultType="java.lang.Integer">
    SELECT COUNT(*) FROM promotion_All_id_col
    <if test="promotionColName != null" > where promotion_col_name like CONCAT('%',#{promotionColName},'%') </if>
  </select>
  
  <select id="getAllList" resultMap="BaseResultMap">
     select * from promotion_All_id_col ORDER BY id DESC
  </select>
  
  <select id="getList" parameterType="java.util.Map"  resultMap="BaseResultMap">
     select * from promotion_All_id_col where 1=1 
     <if test="promotionColName != null" > and promotion_col_name like CONCAT('%',#{promotionColName},'%') </if>
      ORDER BY promotion_id ASC, id DESC
      <if test="page != null" > LIMIT #{page},#{limit} </if>
  </select>
  
  <insert id="addRecord" keyProperty="id" useGeneratedKeys="true" parameterType="java.util.Map" >
    insert into promotion_All_id_col (promotion_id, promotion_col_name)
    values (#{promotionId,jdbcType=INTEGER},
    		#{promotionColName,jdbcType=VARCHAR})
  </insert>
  
  <delete id="delRecord" parameterType="java.util.Map">
  	delete from promotion_All_id_col where id = #{id}
  </delete>
  <delete id="delRelevantRecord" parameterType="java.util.Map">
  	delete from promotion_compare 
  		where promotion_id = (SELECT promotion_id FROM promotion_All_id_col WHERE id = #{id}) 
  </delete>
  
  <delete id="delAllRecord" parameterType="java.lang.Long">
    delete from promotion_All_id_col where id in
    <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <delete id="delAllRelevantRecord" parameterType="java.lang.Long">
    delete from promotion_compare where promotion_id in 
    	(SELECT promotion_id FROM promotion_All_id_col WHERE id in 
    		<foreach collection="list" index="index" item="id" open="(" separator="," close=")">
      			#{id}
    		</foreach>
    	) 
  </delete>
  
  <update id="editRecord" parameterType="java.util.Map">
  	update promotion_All_id_col set promotion_id = #{promotionId,jdbcType=INTEGER}, 
  		promotion_col_name = #{promotionColName,jdbcType=VARCHAR}
  		where id = #{id}
  </update>
  
  

</mapper>