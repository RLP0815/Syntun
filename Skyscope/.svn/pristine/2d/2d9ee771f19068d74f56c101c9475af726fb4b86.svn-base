package com.syntun.inspect;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;

public class ComputeManjian {

	public static HashMap<String, Double> reduceManjian(HashMap<String, Double> priceMap, List<HashMap<String, String>> MJpromotionMap, 
			HashMap<String, String> key, String userId) throws IOException {
		HashMap<String, Double> MJpriceMap = new HashMap<String, Double>();
		double tempPrice = priceMap.get("tempPrice");
		double maxPrice = priceMap.get("maxPrice");
		
		//计算促销用的价格
		double priceTemp = tempPrice;
		double promotionTemp = 0;
		// 从非促销价的促销内容中计算促销价
		for (HashMap<String, String> m : MJpromotionMap) {
			//满减的价格
			double temp = getMJPrice(tempPrice, m, key, userId);
			if (promotionTemp == 0) {
				promotionTemp = temp;
			} else {
				if (temp != 0) {
					promotionTemp = promotionTemp > temp ? temp : promotionTemp;
				}
			}
		}
		// 如果促销价大于价格，交换促销价和价格
		if (promotionTemp > priceTemp) {
			double temProPri = priceTemp;
			priceTemp = promotionTemp;
			promotionTemp = temProPri;
		}
		
		MJpriceMap.put("tempPrice", promotionTemp);
		MJpriceMap.put("maxPrice", maxPrice);
		return MJpriceMap;
	}
	
	/*
	 * 满减计算
	 */
	public static Double getMJPrice(double tempPrice, HashMap<String, String> promotion, HashMap<String,String> key, String userId) {
		double endPrice = 0;
		//String platFormId = key.get("platForm_id");
		
		String promotionTypeInfo = replacePromotionInfo(promotion.get("promotion_type_info"));
		double man = 0;
		double jian = 0;
		double manMax = 0;
		double jianMax = 0;
		double manMin = 0;
		double jianMin = 0;
		boolean isFirst = true;
		for (HashMap<String, String> map : DataSelection.promotionMJ) {
			
			if (map.get("promotion_type_info") != null && map.get("promotion_type_info").equals(promotionTypeInfo)) {
				// 符合满减的情况
				if(isFirst && tempPrice >= Double.parseDouble(map.get("满"))
						&& man == 0){
					isFirst = false;
					man = Double.parseDouble(map.get("满"));
					jian = Double.parseDouble(map.get("减"));
				}
				if(!isFirst && tempPrice >= Double.parseDouble(map.get("满"))
						&& Double.parseDouble(map.get("满")) > man){
					isFirst = false;
					man = Double.parseDouble(map.get("满"));
					jian = Double.parseDouble(map.get("减"));
				}
				// 合生元客户不符合满减情况，最大减
				if(userId.equals("100693") && tempPrice < Double.parseDouble(map.get("满"))
						&& manMax == 0){
					manMax = Double.parseDouble(map.get("满"));
					jianMax = Double.parseDouble(map.get("减"));
				}
				if(userId.equals("100693") && tempPrice < Double.parseDouble(map.get("满"))
						&& Double.parseDouble(map.get("满")) > manMax){
					manMax = Double.parseDouble(map.get("满"));
					jianMax = Double.parseDouble(map.get("减"));
				}
				// 其他客户不符合满减的情况，最小减
				if(tempPrice < Double.parseDouble(map.get("满")) 
						&& manMin == 0){
					manMin = Double.parseDouble(map.get("满"));
					jianMin = Double.parseDouble(map.get("减"));
				}
				if(tempPrice < Double.parseDouble(map.get("满"))
						&& Double.parseDouble(map.get("满")) < manMin){
					manMin = Double.parseDouble(map.get("满"));
					jianMin = Double.parseDouble(map.get("减"));
				}
			}
			
		}
		endPrice = tempPrice;
		// 合生元客户最大减
		if(isFirst && userId.equals("100693") && manMax != 0){
			int a = (int) Math.round(manMax/tempPrice);
			endPrice = tempPrice - Double.parseDouble(String.format("%.2f", jianMax/a));
		}
		// 其他客户最小减
		if(isFirst && !userId.equals("100693") && manMin != 0){
			int a = (int) Math.round(manMin/tempPrice);
			endPrice = tempPrice - Double.parseDouble(String.format("%.2f", jianMin/a));
		}
		// 符合满减条件	
		if(!isFirst){
			endPrice = tempPrice - jian;
		}
		
		return endPrice;
	}
	
	/**
	 * 替换方法，将满减促销中的数据进行替换，使数据进行统一化
	 * 
	 * @param str
	 *            促销内容
	 * @return
	 */
	public static String replacePromotionInfo(String str) {
		String replacestr = str;
		for (HashMap<String, String> map : DataSelection.promotionReplace) {
			for (String key : map.keySet()) {
				replacestr = replacestr.replace(key, map.get(key));
			}
		}
		return replacestr;
	}
	
}
