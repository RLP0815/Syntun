package com.syntun.controller;


import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import org.springframework.web.servlet.ModelAndView;

import com.syntun.controller.systemlog.SysLogger;
import com.syntun.datasource.DataSourceContextHolder;
import com.syntun.entity.ModuleOne;
import com.syntun.service.ModuleOneService;
import com.syntun.util.DatabaseUtil;
import com.syntun.util.GenericController;

import net.sf.json.JSONArray;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * 
 */
@Controller
@RequestMapping(value = "/moduleOne")
public class ModuleOneController {
    @Resource(name = "moduleOneService")
    ModuleOneService moduleOneService;
    
    @RequestMapping(value = "/login")
    public ModelAndView login()
    {
        ModelAndView mv=new ModelAndView();
		DataSourceContextHolder.setDbType("ds_mop");  
        List<ModuleOne> moduleOne = moduleOneService.login();
        mv.addObject("moduleOne",moduleOne);
        mv.setViewName("/login");
        return mv;
    }
    
    @RequestMapping(value = "/getAllList")
	public void getAllList(HttpServletRequest request, HttpServletResponse response) throws Exception 
	{
    	String tableName = request.getParameter("tableName");
    	HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("tableName",tableName);

		DataSourceContextHolder.setDbType("ds_mop");  
		List<ModuleOne> resultMap = moduleOneService.getAllList(params);
		
		JSONArray json = JSONArray.fromObject(resultMap);
		
    	response.getWriter().print(json);
		
	}
    
	@RequestMapping(value = "/getList")
	public void getList(HttpServletRequest request, HttpServletResponse response) throws Exception 
	{
		String method = request.getParameter("method");
		String userName = request.getSession().getAttribute("userName").toString();
		String tableName = request.getParameter("tableName");
    	int page = Integer.parseInt(request.getParameter("page"));
    	int limit = Integer.parseInt(request.getParameter("limit"));
    	int start = (page-1)*limit;
    	HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("page",start);
		params.put("limit",limit);
		params.put("tableName",tableName);
		params.put("userName",userName);
		params.put("method",method);

		DataSourceContextHolder.setDbType("ds_mop");  
		int count = moduleOneService.getCount(params);
		List<ModuleOne> result = moduleOneService.getList(params);
		
		GenericController gen = new GenericController();
		List<Object> res = new ArrayList<>();
        for(Object e : result){  
            Object obj = (Object)e;  
            res.add(obj);  
        }  
        
		String jsons = gen.getResultJson(count, res);
		response.getWriter().print(jsons.toString());
		
	}
	
	@RequestMapping(value = "/addRecord")
    @SysLogger(modelName = "添加记录", methodType = "addRecord")
	public void addRecord(HttpServletRequest request, HttpServletResponse response) throws Exception 
	{
		String ipPort = request.getParameter("ipPort");
		String dataBase = request.getParameter("dataBase");
		String tableName = request.getParameter("tableName");
		String column1 = request.getParameter("column1");
		String column2 = request.getParameter("column2");
		
		String userName = request.getSession().getAttribute("userName").toString();
		SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		Date d = new Date();
		String addTime = sf.format(d);
		
		HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("ipPort",ipPort);
		params.put("dataBase",dataBase);
		params.put("tableName",tableName);
		params.put("column1",column1);
		params.put("column2",column2);
		params.put("userName",userName);
		params.put("addTime",addTime);

		DataSourceContextHolder.setDbType("ds_mop");  
		moduleOneService.addRecord(params);
		
	}
	
	@RequestMapping(value = "/delRecord")
    @SysLogger(modelName = "删除记录", methodType = "delRecord")
	public void delRecord(HttpServletRequest request, HttpServletResponse response) throws Exception 
	{
		
		String id = request.getParameter("id");
		
		HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("id",id);

		DataSourceContextHolder.setDbType("ds_mop");  
		moduleOneService.delRecord(params);
		
	}
	
	@RequestMapping(value = "/delAllRecord")
    @SysLogger(modelName = "批量删除", methodType = "delAllRecord")
	public void delAllRecord(HttpServletRequest request, HttpServletResponse response) throws Exception 
	{
		
		String items = request.getParameter("ids");
		
        List<String> delList = new ArrayList<String>();
        String[] strs = items.split(",");
        for (String str : strs) {
            delList.add(str);
        }

		DataSourceContextHolder.setDbType("ds_mop");  
		moduleOneService.delAllRecord(delList);
		
	}
	
	@RequestMapping(value = "/editRecord")
    @SysLogger(modelName = "修改记录", methodType = "editRecord")
	public void editRecord(HttpServletRequest request, HttpServletResponse response) throws Exception 
	{
		
		String id = request.getParameter("id");
		String ipPort = request.getParameter("ipPort");
		String dataBase = request.getParameter("dataBase");
		String tableName = request.getParameter("tableName");
		String column1 = request.getParameter("column1");
		String column2 = request.getParameter("column2");
		
		HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("id",id);
		params.put("ipPort",ipPort);
		params.put("dataBase",dataBase);
		params.put("tableName",tableName);
		params.put("column1",column1);
		params.put("column2",column2);

		DataSourceContextHolder.setDbType("ds_mop");  
		moduleOneService.editRecord(params);
	}
	
	@RequestMapping(value = "/getDataBase")
	public void getDataBase(HttpServletRequest request, HttpServletResponse response) throws Exception 
	{

        DataSourceContextHolder.setDbType("ds_mop");  
		List<Map<String, String>> resultList = moduleOneService.getDataBase();
		
		JSONArray json = JSONArray.fromObject(resultList);
    	response.getWriter().print(json);
	}
	
	@RequestMapping(value = "/getTableName")
	public void getTableName(HttpServletRequest request, HttpServletResponse response) throws Exception 
	{
		DataSourceContextHolder.setDbType("ds_mop");  
		List<Map<String, String>> resultList = moduleOneService.getTableName();
		
		JSONArray json = JSONArray.fromObject(resultList);
    	response.getWriter().print(json);
	}
	/**
     * 校对数据
     * @throws Exception 
     */
    @ResponseBody
    @RequestMapping(value = "/getCheckResult", produces = "application/json;charset=UTF-8")
    public Map getCheckResult(String checkMethod, String database, String tableName, String column1, String column2, String method) {

    	 Map result = new HashMap<>();
         result.put("code", "500");
         result.put("msg", "失败!");
 		try {
 		    HashMap<String, Object> params = new HashMap<String, Object>();
 			HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();
			String userName = request.getSession().getAttribute("userName").toString();
 			SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
 			Date d = new Date();
 			String addTime = sf.format(d);
 			params.put("ipPort","192.168.0.15:1433");
 			params.put("dataBase",database);
 			params.put("tableName",tableName);
 			params.put("column1",column1);
 			params.put("column2",column2);
 			params.put("userName",userName);
 			params.put("addTime",addTime);
 			params.put("method",method);
 			DataSourceContextHolder.setDbType("ds_mop");  
 			moduleOneService.addRecord(params);
 			
 			String url = "jdbc:sqlserver://192.168.0.15:1433;DatabaseName="+database;
 			HashMap<String, Set<String>> mapSet = DatabaseUtil.getCheckResult(checkMethod,url,tableName,column1,column2);
 			String out = "数据库："+database+"  表："+tableName+"  查询列："+column1+"  被查询列"+column2+"\n";
 			for(String key : mapSet.keySet()){
 				Set<String> st = mapSet.get(key);
 				if((checkMethod.equals("qc_btn1") && st.size() > 2) || checkMethod.equals("qc_btn2")){
 					for (String s : st) {  
 						 out += "\t" + key + "\t\t\t" + s + "\n";
 					}  
 				}
 			}
 			result.put("out", out);
 		    result.put("code", "200");
 		    result.put("msg", "成功!");
 			
 		} catch (Exception e) {
 			e.printStackTrace();
 		}
 		return result;
    }
    /**
     * 批量校对数据
     * @throws Exception 
     */
    @ResponseBody
    @RequestMapping(value = "/getCheckResults", produces = "application/json;charset=UTF-8")
    public Map getCheckResults(String checkMethod, String database, String tableName, String column1, String column2) {
    	
    	 Map result = new HashMap<>();
         result.put("code", "500");
         result.put("msg", "失败!");
         String out = "";
 		try {
 			for(int i=0; i<database.split(",").length; i++){
 				String url = "jdbc:sqlserver://192.168.0.15:1433;DatabaseName="+database.split(",")[i];
 	 			HashMap<String, Set<String>> mapSet = DatabaseUtil.getCheckResult(checkMethod,url,tableName.split(",")[i],column1.split(",")[i],column2.split(",")[i]);
 	 			out += i+1 + "、  数据库："+database.split(",")[i]+"  表："+tableName.split(",")[i]+"  查询列："+column1.split(",")[i]+"  被查询列："+column2.split(",")[i]+"\n";
 	 			for(String key : mapSet.keySet()){
 	 				Set<String> st = mapSet.get(key);
 	 				if(st.size() > 2){
 	 					for (String s : st) {  
 	 						 out += "\t" + key + "\t\t\t" + s + "\n";
 	 					}  
 	 				}
 	 			}
 	 			out += "\n";
 			}
 			
 			result.put("out", out);
 		    result.put("code", "200");
 		    result.put("msg", "成功!");
 		} catch (Exception e) {
 			e.printStackTrace();
 		}
 		return result;
    }
	
}
