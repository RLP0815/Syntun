<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace就是与此文件对应的Dao接口的全路径-->
<mapper namespace="com.syntun.dao.filterUrlDao" >
  <!--如下type的User就是mybatis-config.xml中配置的user-->
  <resultMap id="BaseResultMap" type="filterUrl" >
    <id property="id" column="id" jdbcType="INTEGER" />
    <result property="urlGroup" column="url_group" jdbcType="INTEGER" />
    <result property="sortId" column="sort_id" jdbcType="INTEGER" />
  </resultMap>

  <select id="selectfilterUrl" resultType="filterUrl">
    select * FROM filter_url
  </select>
  
  <select id="selectRecord" resultMap="BaseResultMap">
    select * FROM filter_url ORDER BY id ASC LIMIT #{page},#{limit}
  </select>
  
  <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM filter_url
    <if test="urlStr != null" > where url_group like CONCAT('%',#{urlGroup},'%') </if>
  </select>
  
  <select id="getAllList" parameterType="java.util.Map" resultMap="BaseResultMap">
     select * from filter_url where url_group like CONCAT('%',#{urlGroup},'%') 
     	ORDER BY id ASC
  </select>
  
   <select id="getList" parameterType="java.util.Map"  resultMap="BaseResultMap">
     select * from filter_url where 1=1 
     <if test="urlStr != null" > and url_group like CONCAT('%',#{urlGroup},'%') </if>
      ORDER BY id ASC
      <if test="page != null" > LIMIT #{page},#{limit} </if>
  </select>
  
  <insert id="addRecord" keyProperty="id" useGeneratedKeys="true" parameterType="java.util.Map" >
    insert into filter_url (url_group, sort_id)
    values (#{urlGroup}, #{sortId})
  </insert>
  
  <update id="editRecord" parameterType="java.util.Map">
  	update filter_url set
  		url_group = #{urlGroup},
  		sort_id = #{sortId} where id = #{id}
  </update>
  
  <delete id="delRecord" parameterType="java.util.Map">
  	delete from filter_url where id = #{id}
  </delete>
  
  <delete id="delAllRecord" parameterType="java.lang.Long">
    delete from filter_url where id in
    <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

</mapper>